@model Inmobiliaria.Models.Pago

@{
	ViewData["Title"] = "Editar";

	var contrato = Model.Contrato;
	var nombreInquilino = $"{contrato?.Inquilino?.Nombre} {contrato?.Inquilino?.Apellido}";
	var outputStringContrato = $"{contrato?.Inmueble?.Direccion} ({nombreInquilino}) - ${contrato?.MontoMensual}";
	var selectedContrato = new SelectedInfo(Model.ContratoId, outputStringContrato);
}

<a asp-action="Index" class="btn btn-sm btn-light">
	<i class="fa-solid fa-chevron-left"></i> Volver a la lista
</a>
<div class="d-flex align-items-center justify-content-between">
	<h1>Editar el pago</h1>
</div>

<hr />
<div class="row">
	<div class="col-md-4">
		<form asp-action="Edit">
			<div asp-validation-summary="ModelOnly" class="text-danger"></div>
			@Html.HiddenFor(model => model.IdPago)
			@await Component.InvokeAsync("Search", new { searchUrl = Url.Action("Buscar", "Contratos"), inputId = "ContratoId", selected = selectedContrato })
			<div class="form-group">
				<label asp-for="Numero" class="control-label"></label>
				<input asp-for="Numero" id="NumeroDePago" readonly class="form-control" />
				<span asp-validation-for="Numero" class="text-danger"></span>
			</div>
			<div class="form-group">
				<label asp-for="Fecha" class="control-label"></label>
				<input asp-for="Fecha" type="date" class="form-control" />
				<span asp-validation-for="Fecha" class="text-danger"></span>
			</div>
			<div class="form-group">
				<label asp-for="Importe" class="control-label"></label>
				<input asp-for="Importe" id="ImporteAPagar" class="form-control" />
				<span asp-validation-for="Importe" class="text-danger"></span>
			</div>
			<div class="form-group">
				<input type="submit" value="Guardar" class="btn btn-primary" />
			</div>
		</form>
	</div>
</div>

<script>
	const contractInput = document.querySelector("#ContratoId");
	const numeroInput = document.querySelector("#NumeroDePago");
	const importeInput = document.querySelector("#ImporteAPagar");

	contractInput.addEventListener("input", e => {
		const contratoId = contractInput.value;

		if (!contratoId) {
			numeroInput.value = '';
			return;
		}

		fetch(`/Pagos/ObtenerUltimoPago/${contratoId}`)
			.then(res => res.json())
			.then(data => numeroInput.value = data + 1)
			.catch(err => console.error(err));

		fetch(`/Contratos/Obtener/${contratoId}`)
			.then(res => res.json())
			.then(data => importeInput.value = data)
			.catch(err => console.error(err));
	});
</script>